name: Run DEV E2E API Tests
on:
  workflow_dispatch:
    inputs:
      BASE_URL:
        type: choice
        description: 'Test API Dev Env'     
        required: true
        options:
          - https://api.akord.link
        default: https://api.akord.link
  # schedule:
  # - cron: "0 10,22 * * *"

jobs:
  e2e-api-tests:
    name: Run Mocha Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.7.2]
    env:
      API_KEY: ${{ secrets.E2E_API_KEY }}
      BASE_URL: ${{ github.event.inputs.BASE_URL }}


    outputs:
      outputreport: ${{ steps.testreport.outputs.report }}
      status: ${{ steps.testreport.outputs.status}}
      env_var: ${{ github.event.inputs.BASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Run Mocha tests
        run: yarn test
      
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          files: |
            ${{ github.workspace }}/results/report.json
      - id: testreport
        name: Echo report
        if: always()
        run: |
          passed=$(jq '.stats.passes' ${{ github.workspace }}/results/report.json)
          pending=$(jq '.stats.pending' ${{ github.workspace }}/results/report.json)
          failed=$(jq '.stats.failures' ${{ github.workspace }}/results/report.json)

          success_emoji=":white_check_mark:"
          fail_emoji=":x:"

          formatted_passed=$(echo "$passed" | sed -e "s/^/$success_emoji /")
          formatted_failed=$(echo "$failed" | sed -e "s/^/$fail_emoji /")

          report="$formatted_passed"$'\n'"$formatted_failed"
          echo "$report"
          
          delimiter="$(openssl rand -hex 8)"
          echo "report<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "$report" >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

          if [ -z "$failed" ] || [ "$failed" -eq 0 ]; then
            echo "Tests passed!"
          else
              echo "Tests failed!"
              exit 1
          fi
  send-discord-notification:
    needs: e2e-api-tests
    runs-on: ubuntu-latest
    if: ${{ failure() }}

    steps:
      - name: Notify Discord on job status
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            Tests failed :broken_heart: [${{ github.event.inputs.BASE_URL }}]
            ${{ needs.e2e-api-tests.outputs.outputreport }}

  back-to-normal:
    needs: e2e-api-tests
    runs-on: ubuntu-latest
    if: ${{ success() }}

    steps:
      - name: Check status
        id: check-status
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        "https://api.github.com/repos/${{ github.repository }}/actions/runs")

          previous_run_conclusion=$(echo "$response" | jq -r '.workflow_runs | map(select(.name == "Run DEV E2E API Tests")) | .[1] | .conclusion')
          previous_run_id=$(echo "$response" | jq -r '.workflow_runs | map(select(.name == "Run DEV E2E API Tests")) | .[1] | .id')

          echo "Previous run $previous_run_id concluded with: $previous_run_conclusion"
          echo "recent_status=$previous_run_conclusion" >> $GITHUB_OUTPUT
      - name: Notify Discord on job status
        uses: tsickert/discord-webhook@v5.3.0
        if: ${{ steps.check-status.outputs.recent_status == 'failure' }}
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            Back to normal! Thanks for fixing :metal: [${{ needs.e2e-tests.outputs.env_var }}]
